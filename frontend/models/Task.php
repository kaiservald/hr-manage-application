<?php

namespace frontend\models;

use backend\models\Category;
use common\models\User;
use Yii;

/**
 * This is the model class for table "task".
 *
 * @property int $task_id
 * @property string $title
 * @property string $description
 * @property string $function_name
 * @property string $function_description
 * @property int $user_id
 * @property string $created_at
 */
class Task extends \yii\db\ActiveRecord
{

    public $args = [];
    public $result = [];

    /**
     * {@inheritdoc}
     */
    public static function tableName()
    {
        return 'task';
    }

    /**
     * {@inheritdoc}
     */
    public function rules()
    {
        return [
            [['title', 'description', 'function_name', 'function_description', 'category_id'], 'required'],
            [['description'], 'string'],
            [['category_id'], 'integer'],
            [['title', 'function_name', 'function_description'], 'string', 'max' => 255],
            [['category_id'], 'exist', 'skipOnError' => true, 'targetClass' => \frontend\models\Category::className(), 'targetAttribute' => ['category_id' => 'category_id']],
            [['args', 'result'], 'each', 'rule' => ['string']],
        ];
    }

    /**
     * {@inheritdoc}
     */
    public function attributeLabels()
    {
        return [
            'task_id' => 'Task ID',
            'title' => 'Title',
            'description' => 'Description',
            'function_name' => 'Function Name',
            'function_description' => 'Function Description',
            'user_id' => 'User ID',
            'created_at' => 'Created At',
            'username' => 'Author',
            'args' => 'Arguments',
            'result' => 'Result'
        ];
    }


    public function getUser()
    {
        return $this->hasOne(User::className(), ['id' => 'user_id']);
    }

    /**
     * Gets query for [[Category]].
     *
     * @return \yii\db\ActiveQuery
     */
    public function getCategory()
    {
        return $this->hasOne(Category::className(), ['category_id' => 'category_id']);
    }

    public function getUsername()
    {
        return $this->user->username;
    }

    public function generateTests()
    {
        $tests = [];
        $tests['args'] = $this->args;
        $tests['result'] = $this->result;
        $this->tests = json_encode($tests);
    }

    public function parseTests()
    {
        $args = [];
        $result = [];
        $tests = json_decode($this->tests, true);

        $this->args = $tests['args'];
        $this->result = $tests['result'];
    }

    public function beforeSave($insert)
    {
        if ($insert) {
            $this->user_id = Yii::$app->user->getId();
            $this->created_at = Date("Y-m-d h:i:s");
        }
        $this->generateTests();
        return parent::beforeSave($insert); // TODO: Change the autogenerated stub
    }
}
